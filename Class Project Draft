# File: Andrew McDonald Class Project Draft Week 8.py
# Name: Andrew "Bo" McDonald
# Date: 08/01/2021
# Course: CIS245-T302-T801
# Assignment Number: Class Project Task 2
# Description:  For your class project we will be creating an application that interacts with a webservice in order to obtain data.  
		Your program will use all of the information youâ€™ve learned in the class in order to create a useful application.
		Your program must prompt the user for their city or zip code and request weather forecast data from openweathermap.org.  
		Your program must display the weather information in an READABLE format to the user.
		
# Start

# import requests 
import requests 

# Display welcome message
print("Welcome to the Weather Reporting Service brought to you by Python. Please press Enter to begin.")

# Define city():
def city():
	# City data
	cityUrl = "https://api.openweathermap.org/data/2.5/weather?q={city name},us&appid=d5412cffb533357d6ce85a9a34f7003e&units=imperial".format(city)
	appid = "d5412cffb533357d6ce85a9a34f7003e"
	city = input("Please enter the city name: ")
	request = request.get(cityUrl)
	data = request.json()
	return data

# Define zipCode():
def zipCode():
	zipCodeUrl = "https://api.openweathermap.org/data/2.5/weather?zip={zip code},us&appid=d5412cffb533357d6ce85a9a34f7003e&units=imperial".format(zipCode)
	appid = "d5412cffb533357d6ce85a9a34f7003e"
	zipCode = int(input("Please enter your Zip Code: "))
	request = request.get(zipCodeUrl)
	data = request.json()
	return data
	
# Define Data being displayed
def display(data):
	temp = data["main"]["temp"]
	maxTemp = data["main"]["temp_max"]
	minTemp = data["main"]["temp_min"]
	windSpeed = data["main"]["speed"]
	pressure = data["main"]["pressure"]
	humidity = data["main"]["humidity"]
	description = data["weather"][0]["description"]
	
	# Display data listed above in readable format
	print("Current temperature: {} degrees Fahrenheit".format(temp))
	print("Maximum temperature: {} degrees Fahrenheit".format(maxTemp))
	print("Minimum temperature: {} degrees Fahrenheit".format(minTemp))
	print("Wind speed: {} meters/second".format(windSpeed))
	print("Pressure: {} hPa".format(pressure))
	print("Humidity: {} %".format(humidity))
	print("Description: {}".format(description))
	
	
# Define main function with while loop and implementing try blocks for establishing connection 
def main():
	while True:
		userSelection = int(input("Which way would you like to search to find your weather report? \n1. Zip Code \n2. City Name \n3. Quit\n"))
		if userSelection == 1:
			# Ask for zip code
			try:
				print("Valid selection; Connection established.")
				zipCode()
				
			# Include exception for invalid input
			except Exception:
				print("Your input is invalid. Please try again.")
				zipCode()
				
		elif userSelection == 2:
			# Ask for city name
			try:
				print("Valid selection; Connection established.")
				city()
				
			# Include exception for invalid input	
			except Exception:
				print("Your input is invalid. Please try again.")
				city()
				
		elif userSelection == 3:
			print("Thank you for visiting the Weather Reporting Service brought to you by Python.")
			# break because userSelection 3 means quit
			break
			
		else: 
			# Invalid input
			print("Your input is invalid. Please try again.")
			
main()


# define searchAgain for continued searches
searchAgain = "yes" or "y"

# while loop for searchAgain
while searchAgain == "yes" or searchAgain == "y":
	main()
	
	print("Would you like to make another search?")
	searchAgain = input()
	
if searchAgain == "no" or searchAgain == "n"
	print("Thank you for visiting the Weather Reporting Service brought to you by Python.")
	break

